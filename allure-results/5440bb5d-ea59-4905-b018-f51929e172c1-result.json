{"name": "Проверка описания маршрута c названием Рабочий", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <project.tests.test_call_taxi_page.TestCallTaxiPage object at 0x10355f650>, call_taxi_page = <project.pages.call_taxi_page.CallTaxiPage object at 0x101166290>\ntaxi_title = 'Рабочий', expected_tarif_description = 'Рабочий - Для деловых особ, которых отвлекают'\n\n    @pytest.mark.parametrize(\n        'taxi_title, expected_tarif_description',\n        [\n            pytest.param(*Data.DATA_1, marks=pytest.mark.xfail(reason=\"У тарифа сонный описание от разговорчивый\")),\n            Data.DATA_2,\n            pytest.param(*Data.DATA_3, marks=pytest.mark.xfail(reason=\"У тарифа разговорчивый описание от сонный\")),\n            Data.DATA_4,\n            Data.DATA_5,\n            Data.DATA_6\n        ]\n    )\n    @allure.title(\"Проверка описания маршрута c названием {taxi_title}\")\n    def test_modal_window_with_description_tarif(self, call_taxi_page, taxi_title, expected_tarif_description):\n>       actual_tarif_description = call_taxi_page.modal_window_with_description_tarif(taxi_title)\n                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nproject/tests/test_call_taxi_page.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nproject/pages/call_taxi_page.py:47: in modal_window_with_description_tarif\n    _ = self.find_element_with_wait(CallTaxiPageLocators.TARIF_NAME)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nproject/pages/base_page.py:19: in find_element_with_wait\n    self.wait.until(ec.visibility_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"b1ad2a02e53565c80ac6e22612e79863\")>\nmethod = <function visibility_of_element_located.<locals>._predicate at 0x103593880>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:138: TimeoutException"}, "steps": [{"name": "Кликнуть на элемент", "status": "passed", "steps": [{"name": "Поиск элемента с ожиданием пока не будет виден", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//div[@class=\"tcard-title\" and text()=\"Рабочий\"]')"}], "start": 1758444787913, "stop": 1758444787936}], "parameters": [{"name": "locator", "value": "('xpath', '//div[@class=\"tcard-title\" and text()=\"Рабочий\"]')"}], "start": 1758444787913, "stop": 1758444787967}, {"name": "Поиск элемента с ожиданием пока не будет виден", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//div[@class=\"tcard active\"]/button')"}], "start": 1758444787967, "stop": 1758444787986}, {"name": "Навести на элемент", "status": "passed", "parameters": [{"name": "element", "value": "<selenium.webdriver.remote.webelement.WebElement (session=\"b1ad2a02e53565c80ac6e22612e79863\", element=\"f.483F6E575612E1CBE9B846C382A93C12.d.19E24B5DD81684D275A3A2A7430DF29A.e.48\")>"}], "start": 1758444787987, "stop": 1758444788255}, {"name": "Поиск элемента с ожиданием пока не будет виден", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"/Users/andreyshnyrin/PycharmProjects/Sprint_10/.venv/lib/python3.11/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/andreyshnyrin/PycharmProjects/Sprint_10/project/pages/base_page.py\", line 19, in find_element_with_wait\n    self.wait.until(ec.visibility_of_element_located(locator))\n  File \"/Users/andreyshnyrin/PycharmProjects/Sprint_10/.venv/lib/python3.11/site-packages/selenium/webdriver/support/wait.py\", line 138, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('css selector', 'div.tcard.active div.i-title')"}], "start": 1758444788255, "stop": 1758444793463}], "parameters": [{"name": "taxi_title", "value": "'Рабочий'"}, {"name": "expected_tarif_description", "value": "'Рабочий - Для деловых особ, которых отвлекают'"}], "start": 1758444787913, "stop": 1758444793464, "uuid": "e20baff4-b0b8-4e19-961b-52efc3cf1534", "historyId": "a63fb8ddd95d23f95429bb8fa78a8c0d", "testCaseId": "11b8747eb05c75fc49596947a902aadf", "fullName": "project.tests.test_call_taxi_page.TestCallTaxiPage#test_modal_window_with_description_tarif", "labels": [{"name": "parentSuite", "value": "project.tests"}, {"name": "suite", "value": "test_call_taxi_page"}, {"name": "subSuite", "value": "TestCallTaxiPage"}, {"name": "host", "value": "MacBook-Pro-Andrej.local"}, {"name": "thread", "value": "16929-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "project.tests.test_call_taxi_page"}], "titlePath": ["project", "tests", "test_call_taxi_page.py", "TestCallTaxiPage"]}